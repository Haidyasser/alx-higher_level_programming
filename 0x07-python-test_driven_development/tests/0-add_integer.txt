>>> add_integer = __import__('0-add_integer').add_integer
>>> add_integer(2,3)
5
>>> add_integer(2)
100
>>> add_integer(0)
98
>>> add_integer(-5)
93
>>> add_integer(2.3)
100
>>> add_integer(5.45, 65)
70
>>> add_integer(5.45, .24)
5
>>> add_integer("hello")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/haidy/Documents/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 9, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer
>>> add_integer(65+4j)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/haidy/Documents/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 9, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer
>>> add_integer(1,65+4j)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/haidy/Documents/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 11, in add_integer
    raise TypeError("b must be an integer")
TypeError: b must be an integer
>>> add_integer(65+4j)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/haidy/Documents/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 9, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer
>>> add_integer(None)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/haidy/Documents/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 9, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer
>>> add_integer(3,None)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/haidy/Documents/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 11, in add_integer
    raise TypeError("b must be an integer")
TypeError: b must be an integer
>>> add_integer(float('inf'))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/haidy/Documents/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 12, in add_integer
    return int(a) + int(b)
           ^^^^^^
OverflowError: cannot convert float infinity to integer
>>> add_integer(4,float('inf'))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/haidy/Documents/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 12, in add_integer
    return int(a) + int(b)
                    ^^^^^^
OverflowError: cannot convert float infinity to integer
>>> add_integer(float('inf'),float('inf'))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/haidy/Documents/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 12, in add_integer
    return int(a) + int(b)
           ^^^^^^
OverflowError: cannot convert float infinity to integer
>>> add_integer("hello", "hi")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/haidy/Documents/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 9, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer
>>> add_integer("hello", 5.3)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/haidy/Documents/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 9, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer